[{"E:\\task\\calender\\src\\Components\\Curosel\\index.js":"1","E:\\task\\calender\\src\\Components\\Calender\\index.js":"2","E:\\task\\calender\\src\\App.js":"3","E:\\task\\calender\\src\\Components\\Tile\\index.js":"4","E:\\task\\calender\\src\\helpers\\dates.js":"5","E:\\task\\calender\\src\\index.js":"6","E:\\task\\calender\\src\\Components\\EventCard\\index.js":"7","E:\\task\\calender\\src\\Components\\Footer\\index.js":"8","E:\\task\\calender\\src\\Components\\Header\\index.js":"9"},{"size":3708,"mtime":1608015022106,"results":"10","hashOfConfig":"11"},{"size":5425,"mtime":1607992525755,"results":"12","hashOfConfig":"11"},{"size":4222,"mtime":1608014979262,"results":"13","hashOfConfig":"11"},{"size":5344,"mtime":1608011443486,"results":"14","hashOfConfig":"11"},{"size":1530,"mtime":1607992669880,"results":"15","hashOfConfig":"11"},{"size":197,"mtime":1607301479364,"results":"16","hashOfConfig":"11"},{"size":1575,"mtime":1608001787265,"results":"17","hashOfConfig":"11"},{"size":448,"mtime":1607756334039,"results":"18","hashOfConfig":"11"},{"size":1046,"mtime":1607832229754,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"am4zey",{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"E:\\task\\calender\\src\\Components\\Curosel\\index.js",["41","42","43"],"E:\\task\\calender\\src\\Components\\Calender\\index.js",["44","45","46","47","48","49","50"],"import React from \"react\";\r\nimport Footer from \"../Footer\";\r\nimport Tile from \"../Tile\";\r\nimport \"./styles.scss\";\r\n// import { ResponseObjects } from \"../../config/response.json\";\r\nimport Curosel from \"../Curosel\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Calender({ currentMonth, nextMonth, prevMonth, thisMonth, thisYear }) {\r\n  const [prevMonthData, setPrevMonthData] = React.useState([]);\r\n  const [nextMonthData, setNextMonthData] = React.useState([]);\r\n  const [thisMonthData, setThisMonthData] = React.useState([]);\r\n  const [showEventCard, setShowEventCard] = React.useState(false);\r\n  const [curoselDate, setCuroselDate] = React.useState();\r\n  const [ResponseObjects, setResponseObject] = React.useState();\r\n\r\n  const checkFirstDate = (day) => {\r\n    switch (day) {\r\n      case \"sun\":\r\n        return 0;\r\n      case \"mon\":\r\n        return 1;\r\n      case \"tue\":\r\n        return 2;\r\n      case \"wed\":\r\n        return 3;\r\n      case \"thu\":\r\n        return 4;\r\n      case \"fri\":\r\n        return 5;\r\n      case \"sat\":\r\n        return 6;\r\n    }\r\n  };\r\n\r\n  const checkLastDate = (day) => {\r\n    switch (day) {\r\n      case \"sun\":\r\n        return 6;\r\n      case \"mon\":\r\n        return 5;\r\n      case \"tue\":\r\n        return 4;\r\n      case \"wed\":\r\n        return 3;\r\n      case \"thu\":\r\n        return 2;\r\n      case \"fri\":\r\n        return 1;\r\n      case \"sat\":\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  const getData = () => {\r\n    const requestObject = {\r\n      RequestObjects: [\r\n        {\r\n          Post: {\r\n            OperationType: \"Read\",\r\n            Privacy: {\r\n              SearchValues: [\"Public\"],\r\n              Return: true,\r\n            },\r\n            UserId: {\r\n              SearchValues: [\"assign\"],\r\n              Return: false,\r\n            },\r\n            id: {\r\n              Return: true,\r\n            },\r\n\r\n            IsCalendarEntry: {\r\n              SearchValues: [true],\r\n              Return: true,\r\n            },\r\n            Images: {\r\n              Return: true,\r\n            },\r\n            Text: {\r\n              Return: true,\r\n            },\r\n            Rating: {\r\n              Return: true,\r\n            },\r\n            TypeOfDay: {\r\n              Return: true,\r\n            },\r\n\r\n            MaxItemCount: \"5\",\r\n\r\n            CalendarDateTime: {\r\n              Return: true,\r\n              Sort: \"Descending\",\r\n            },\r\n            ContinuationToken: null,\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    Axios.post(\r\n      \"https://quinncareapidev.azurewebsites.net/api/graph\",\r\n      requestObject\r\n    )\r\n      .then((res) => setResponseObject(res.data.ResponseObjects))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // console.log(currentMonth, nextMonth, prevMonth);\r\n  React.useEffect(() => {\r\n    getData();\r\n    const checkFirstDay = () => {\r\n      let firstDay = currentMonth[0].split(\"-\")[1];\r\n      let lastDay = currentMonth[currentMonth.length - 1].split(\"-\")[1];\r\n      let firstValue = checkFirstDate(firstDay.toLowerCase());\r\n      // let lastValue = checkFirstDate(lastDay.toLowerCase());\r\n      let prevValue =\r\n        firstValue === 0 ? [] : prevMonth.slice(-Number(firstValue));\r\n      let nextValue = nextMonth.splice(0, checkLastDate(lastDay));\r\n\r\n      let thisOwnValue = [];\r\n      let nextOwnValue = [];\r\n      let prevOwnValue = [];\r\n      const thisMonthData = currentMonth.map((item) =>\r\n        thisOwnValue.push(item.split(\"-\")[0])\r\n      );\r\n      const prevMonthData = prevValue.map((item) =>\r\n        prevOwnValue.push(item.split(\"-\")[0])\r\n      );\r\n      const nextMothData = nextValue.map((item) =>\r\n        nextOwnValue.push(item.split(\"-\")[0])\r\n      );\r\n\r\n      setPrevMonthData(prevOwnValue);\r\n      setThisMonthData(thisOwnValue);\r\n      setNextMonthData(nextOwnValue);\r\n    };\r\n    if (currentMonth.length > 0) {\r\n      checkFirstDay();\r\n    }\r\n  }, [currentMonth, nextMonth, prevMonth]);\r\n\r\n  const getEvents = (day, month, year) => {\r\n    let items = [];\r\n\r\n    ResponseObjects &&\r\n      ResponseObjects[0]?.Posts.map((item) => {\r\n        // console.log(\r\n        //   new Date(item.CalendarDateTime).toLocaleDateString(),\r\n        //   new Date(year, month, day).toLocaleDateString()\r\n        // );\r\n        if (\r\n          new Date(item.CalendarDateTime).toLocaleDateString() ==\r\n          new Date(year, month, day).toLocaleDateString()\r\n        ) {\r\n          items.push(item);\r\n          // console.log(item);\r\n        }\r\n      });\r\n\r\n    return items;\r\n  };\r\n\r\n  const displayEvent = (val, day, month, year) => {\r\n    let date = new Date(year, month, day).toLocaleDateString();\r\n    setCuroselDate(date);\r\n    setShowEventCard(val);\r\n  };\r\n\r\n  const closeEvent = () => {\r\n    setShowEventCard(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {ResponseObjects &&\r\n        [\r\n          ...prevMonthData,\r\n          ...thisMonthData,\r\n          ...nextMonthData,\r\n        ]?.map((item, index) => (\r\n          <Tile\r\n            key={index}\r\n            monthValue={item}\r\n            thisMonth={thisMonth}\r\n            thisYear={thisYear}\r\n            val={index + 1}\r\n            getEvents={getEvents}\r\n            displayEvent={displayEvent}\r\n            ResponseObjects={ResponseObjects}\r\n          />\r\n        ))}\r\n      <Footer thisMonth={thisMonth} thisYear={thisYear} />\r\n      {showEventCard && <Curosel date={curoselDate} closeEvent={closeEvent} />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Calender;\r\n","E:\\task\\calender\\src\\App.js",["51","52","53","54","55","56","57","58"],"E:\\task\\calender\\src\\Components\\Tile\\index.js",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"E:\\task\\calender\\src\\helpers\\dates.js",["82","83","84","85","86","87"],"E:\\task\\calender\\src\\index.js",[],["88","89"],"E:\\task\\calender\\src\\Components\\EventCard\\index.js",["90","91"],"import React from \"react\";\r\nimport CardImage from \"../../asset/card-image.png\";\r\nimport \"./styles.scss\";\r\n\r\nfunction EventCard({ data }) {\r\n  const colors = [\"#f6cee6\", \"#faeed4\", \"#d1e8e0\", \"#ded2f6\"];\r\n  return (\r\n    <div className=\"event_card\">\r\n      <div className=\"image_container\">\r\n        <img src={data?.Images[0]?.ImageUrl} alt=\"event-image\" />\r\n      </div>\r\n      <div className=\"event_container\">\r\n        <div className=\"event_items\">\r\n          {data.TypeOfDay.map((item, index) => {\r\n            let splited = item.split(\" \");\r\n            let initials =\r\n              splited.length > 1\r\n                ? splited[0]?.substring(0, 1).toUpperCase() +\r\n                  splited[1]?.substring(0, 1)?.toLowerCase()\r\n                : splited[0]?.substring(0, 1).toUpperCase();\r\n\r\n            return (\r\n              <p style={{ backgroundColor: colors[index] }} className=\"w\">\r\n                {initials}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"rating_items\">\r\n          {Array.from(Array(5).keys()).map((item, index) => (\r\n            <span\r\n              style={{\r\n                color: index + 1 <= data.Rating ? \"#9ad1f7\" : \"#dddddd\",\r\n              }}\r\n            >\r\n              &#9733;\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"description_section\">\r\n        <h6>\r\n          <strong>{new Date(data.CalendarDateTime).toDateString()}</strong>\r\n        </h6>\r\n        <p>{data.Text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventCard;\r\n","E:\\task\\calender\\src\\Components\\Footer\\index.js",[],"E:\\task\\calender\\src\\Components\\Header\\index.js",[],{"ruleId":"92","severity":1,"message":"93","line":9,"column":10,"nodeType":"94","messageId":"95","endLine":9,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":79,"column":6,"nodeType":"98","endLine":79,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":118,"column":51,"nodeType":"102","messageId":"103","endLine":118,"endColumn":53},{"ruleId":"104","severity":1,"message":"105","line":18,"column":5,"nodeType":"106","messageId":"107","endLine":33,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":37,"column":5,"nodeType":"106","messageId":"107","endLine":52,"endColumn":6},{"ruleId":"92","severity":1,"message":"108","line":124,"column":13,"nodeType":"94","messageId":"95","endLine":124,"endColumn":26},{"ruleId":"92","severity":1,"message":"109","line":127,"column":13,"nodeType":"94","messageId":"95","endLine":127,"endColumn":26},{"ruleId":"92","severity":1,"message":"110","line":130,"column":13,"nodeType":"94","messageId":"95","endLine":130,"endColumn":25},{"ruleId":"111","severity":1,"message":"112","line":147,"column":44,"nodeType":"113","messageId":"114","endLine":147,"endColumn":46},{"ruleId":"100","severity":1,"message":"101","line":153,"column":64,"nodeType":"102","messageId":"103","endLine":153,"endColumn":66},{"ruleId":"92","severity":1,"message":"115","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":15},{"ruleId":"92","severity":1,"message":"116","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"117","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":12},{"ruleId":"92","severity":1,"message":"118","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":25},{"ruleId":"92","severity":1,"message":"119","line":13,"column":7,"nodeType":"94","messageId":"95","endLine":13,"endColumn":13},{"ruleId":"92","severity":1,"message":"120","line":20,"column":17,"nodeType":"94","messageId":"95","endLine":20,"endColumn":25},{"ruleId":"92","severity":1,"message":"121","line":22,"column":9,"nodeType":"94","messageId":"95","endLine":22,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":88,"column":28,"nodeType":"102","messageId":"103","endLine":88,"endColumn":30},{"ruleId":"92","severity":1,"message":"122","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"123","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"92","severity":1,"message":"124","line":4,"column":19,"nodeType":"94","messageId":"95","endLine":4,"endColumn":27},{"ruleId":"92","severity":1,"message":"125","line":4,"column":29,"nodeType":"94","messageId":"95","endLine":4,"endColumn":36},{"ruleId":"111","severity":1,"message":"126","line":50,"column":59,"nodeType":"113","messageId":"127","endLine":50,"endColumn":61},{"ruleId":"92","severity":1,"message":"128","line":51,"column":9,"nodeType":"94","messageId":"95","endLine":51,"endColumn":12},{"ruleId":"100","severity":1,"message":"101","line":53,"column":49,"nodeType":"102","messageId":"103","endLine":53,"endColumn":51},{"ruleId":"100","severity":1,"message":"101","line":54,"column":50,"nodeType":"102","messageId":"103","endLine":54,"endColumn":52},{"ruleId":"111","severity":1,"message":"112","line":66,"column":48,"nodeType":"113","messageId":"114","endLine":66,"endColumn":50},{"ruleId":"100","severity":1,"message":"101","line":67,"column":53,"nodeType":"102","messageId":"103","endLine":67,"endColumn":55},{"ruleId":"111","severity":1,"message":"112","line":77,"column":48,"nodeType":"113","messageId":"114","endLine":77,"endColumn":50},{"ruleId":"100","severity":1,"message":"101","line":78,"column":53,"nodeType":"102","messageId":"103","endLine":78,"endColumn":55},{"ruleId":"92","severity":1,"message":"129","line":86,"column":7,"nodeType":"94","messageId":"95","endLine":86,"endColumn":12},{"ruleId":"92","severity":1,"message":"130","line":92,"column":7,"nodeType":"94","messageId":"95","endLine":92,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":95,"column":16,"nodeType":"102","messageId":"103","endLine":95,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":96,"column":18,"nodeType":"102","messageId":"103","endLine":96,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":97,"column":17,"nodeType":"102","messageId":"103","endLine":97,"endColumn":19},{"ruleId":"100","severity":1,"message":"101","line":139,"column":23,"nodeType":"102","messageId":"103","endLine":139,"endColumn":25},{"ruleId":"100","severity":1,"message":"101","line":140,"column":24,"nodeType":"102","messageId":"103","endLine":140,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":141,"column":23,"nodeType":"102","messageId":"103","endLine":141,"endColumn":25},{"ruleId":"100","severity":1,"message":"101","line":151,"column":20,"nodeType":"102","messageId":"103","endLine":151,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":152,"column":20,"nodeType":"102","messageId":"103","endLine":152,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":153,"column":19,"nodeType":"102","messageId":"103","endLine":153,"endColumn":21},{"ruleId":"92","severity":1,"message":"131","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":4,"column":3,"nodeType":"106","messageId":"107","endLine":29,"endColumn":4},{"ruleId":"111","severity":1,"message":"112","line":34,"column":40,"nodeType":"113","messageId":"114","endLine":34,"endColumn":42},{"ruleId":"92","severity":1,"message":"132","line":40,"column":9,"nodeType":"94","messageId":"95","endLine":40,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":47,"column":40,"nodeType":"113","messageId":"114","endLine":47,"endColumn":42},{"ruleId":"111","severity":1,"message":"112","line":60,"column":40,"nodeType":"113","messageId":"114","endLine":60,"endColumn":42},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"92","severity":1,"message":"137","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":10,"column":9,"nodeType":"140","endLine":10,"endColumn":66},"no-unused-vars","'ResponseObjects' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'date'. Either include it or remove the dependency array.","ArrayExpression",["141"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'thisMonthData' is assigned a value but never used.","'prevMonthData' is assigned a value but never used.","'nextMothData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Curosel' is defined but never used.","'EventCard' is defined but never used.","'Tile' is defined but never used.","'ResponseObjects' is defined but never used.","'moment' is assigned a value but never used.","'setYaxis' is assigned a value but never used.","'evntHandler' is assigned a value but never used.","'TileImage' is defined but never used.","'getDate' is defined but never used.","'getMonth' is defined but never used.","'getYear' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'one' is defined but never used.","'event' is assigned a value but never used.","'todayVal' is assigned a value but never used.","'React' is defined but never used.","'year' is assigned a value but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'CardImage' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"144","fix":"145"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [date]",{"range":"146","text":"147"},[2270,2272],"[date]"]